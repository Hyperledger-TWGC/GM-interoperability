schedules:
  - cron: "0 0 * * 0" # https://crontab.guru/#0_0_*_*_0
    displayName: "Weekly Sunday build"
    branches:
      include:
        - master
    always: true

pool:
   vmImage: 'ubuntu-18.04'

jobs:
  - job: 
    displayName: SM3Interop
    variables:
    - name: LD_LIBRARY_PATH # used for guanzhi/GmSSL
      value: /usr/local/gmssl/lib
    steps:
    - script: cd $(Pipeline.Workspace); git clone https://github.com/guanzhi/GmSSL.git
      displayName: Clone GMSSL
    - script: cd $(Pipeline.Workspace)/GmSSL; git checkout master; SYSTEM=`uname -s` ./config --prefix=/usr/local/gmssl; make; sudo make install_sw  
      displayName: Config, make and install GMSSL
    - checkout: self
    - task: GoTool@0
      inputs:
        version: 1.15
    - script: cd interop; go mod vendor
    - script: cd interop; go test -v util_test.go sm3Interop_test.go
      displayName: sm3 data interaction check

  - job:
    displayName: SM2Interop
    strategy:
      matrix:
        TJ_CCS_SIGN:
            SOURCE: 'TJ'
            TARGET: 'CCS'
            ACTION: 'SIGN'
        TJ_CCS_ENCRYPT:
            SOURCE: 'TJ'
            TARGET: 'CCS'
            ACTION: 'ENCRYPT'
        CCS_TJ_SIGN:
            SOURCE: 'CCS'
            TARGET: 'TJ'
            ACTION: 'SIGN'
        CCS_TJ_ENCRYPT:
            SOURCE: 'CCS'
            TARGET: 'TJ'
            ACTION: 'ENCRYPT'
        TJ_PKU_SIGN:
            SOURCE: 'TJ'
            TARGET: 'PKU'
            ACTION: 'SIGN'
        TJ_PKU_ENCRYPT:
            SOURCE: 'TJ'
            TARGET: 'PKU'
            ACTION: 'ENCRYPT'
        CCS_PKU_SIGN:
            SOURCE: 'CCS'
            TARGET: 'PKU'
            ACTION: 'SIGN'
        CCS_PKU_ENCRYPT:
            SOURCE: 'CCS'
            TARGET: 'PKU'
            ACTION: 'ENCRYPT' 
        PKU_TJ_SIGN:
            SOURCE: 'PKU'
            TARGET: 'TJ'
            ACTION: 'SIGN'
        PKU_TJ_ENCRYPT:
            SOURCE: 'PKU'
            TARGET: 'TJ'
            ACTION: 'ENCRYPT'
        PKU_CCS_SIGN:
            SOURCE: 'PKU'
            TARGET: 'CCS'
            ACTION: 'SIGN'
        PKU_CCS_ENCRYPT:
            SOURCE: 'PKU'
            TARGET: 'CCS'
            ACTION: 'ENCRYPT'
    variables:
    - name: LD_LIBRARY_PATH # used for guanzhi/GmSSL
      value: /usr/local/gmssl/lib
    steps:
    - script: cd $(Pipeline.Workspace); git clone https://github.com/guanzhi/GmSSL.git
      displayName: Clone GMSSL
    - script: cd $(Pipeline.Workspace)/GmSSL; git checkout master; SYSTEM=`uname -s` ./config --prefix=/usr/local/gmssl; make; sudo make install_sw  
      displayName: Config, make and install GMSSL
    - checkout: self
    - task: GoTool@0
      inputs:
        version: 1.15
    - script: cd interop; go mod vendor
    - script: cd interop; go test -v util_test.go sm2Interop_test.go tjSM2.go ccsSM2.go pkuSM2.go type.go
      displayName: sm2 data interaction check

  - job:
    displayName: Java-GM
    steps:
    - checkout: self
    - task: GoTool@0
      inputs:
        version: 1.15
    - script: cd interop; go mod vendor
    - script: cd $(Pipeline.Workspace); git clone https://github.com/Hyperledger-TWGC/java-gm.git
      displayName: Clone java-gm
    - script: cd interop; go test util_test.go tjfocExport_test.go
      displayName: build artifacts - tjfoc
    - script: cd $(Pipeline.Workspace)/java-gm; gradle build; 
      displayName: build artifacts - java
    - script: cp -f $(Pipeline.Workspace)/java-gm/*.pem ./interop/testdata/java/;
      displayName: copy java artifacts to testdata/java
    - script: cd interop; go test -v util_test.go tjjavaImport_test.go
      displayName: TJImportJava
    - script: cp -f ./interop/testdata/tjfoc/*.pem $(Pipeline.Workspace)/java-gm;
      displayName: copy tjfoc artifacts to java-gm
    - script: cd $(Pipeline.Workspace)/java-gm;  gradle build;
      displayName: Java test on imported

  - job:
    displayName: Workshop
    steps:
    - checkout: self
    - task: GoTool@0
      inputs:
        version: 1.15
    - script: cd workshop;go test -v ./... --cover
      displayName: Test for workshop